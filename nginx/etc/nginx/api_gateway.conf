# The api_gateway.conf file defines the virtual server that exposes NGINX Plus as an API gateway to clients.
# This configuration exposes all of the APIs published by the API gateway at a single entry point, protected by TLS.

# log_format api_main '$remote_addr - $remote_user [$time_local] "$request"'
#                     '$status $body_bytes_sent "$http_referer" "$http_user_agent"'
#                     '"$http_x_forwarded_for" "$api_name"';

include api_backends.conf;
include api_keys.conf;

#limit_req_zone $binary_remote_addr zone=client_ip_10rs:1m rate=10r/s;
limit_req_zone $binary_remote_addr zone=client_ip_1rs:1m rate=1r/s;
limit_req_zone $http_apikey        zone=apikey_200rs:1m   rate=200r/s;

# In this example, the limit_req_zone directive defines a rate limit of 1 requests per
# second for each client IP address ($binary_remote_addr), and the one on line 13 defines a limit
# of 200 requests per second for each authenticated client ID ($http_apikey).

server {

    set $api_name -; # Start with an undefined API name, each API will update this value
    # access_log /var/log/nginx/api_access.log api_main; # Each API may also log to a separate file

    server_name api.example.com;
    listen 5000;
    #listen 443 ssl;

    # TLS config
    #ssl_certificate      /etc/ssl/certs/api.example.com.crt;
    #ssl_certificate_key  /etc/ssl/private/api.example.com.key;
    #ssl_session_cache    shared:SSL:10m;
    #ssl_session_timeout  5m;
    #ssl_ciphers          HIGH:!aNULL:!MD5;
    #ssl_protocols        TLSv1.1 TLSv1.2;

    # API definitions, one per file
    include api_conf.d/*;

    # Error responses
    error_page 404 = @400;         # Invalid paths are treated as bad requests
    proxy_intercept_errors on;     # Do not send backend errors to the client
    include api_json_errors.conf;  # API client friendly JSON error responses
    default_type application/json; # If no content-type then assume JSON
}