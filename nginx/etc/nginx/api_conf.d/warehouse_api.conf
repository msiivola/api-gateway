# API definition for Warehouse. Requires authentication via API keys.

location /api/warehouse/parts {
    set $upstream parts;
    rewrite ^(.*)$ /_warehouse$1 last;
    
    # Explanation of the rewrite:
    # ^ = match any URI
    # /_warehouse = rewrite the URI to the name of the API (underscore prefix indicates "internal")
    # last = look for the location that matches the new URI
}

location /api/warehouse/tools {
    set $upstream tools;

    # The end point is at http://$upstream/api/tools/all
    # so let's rewrite the URI on the fly:
    rewrite ^/api/warehouse/tools /api/tools/all/$1;
    
    # Now send the request to another location block:
    rewrite ^(.*)$ /_warehouse$1 last;
    
    # Explanation of the rewrite:
    # ^(.*)$ = capture the entire original URI
    # /_warehouse = rewrite the URI so that the original URI ($1)
    # is prefixed by /_warehouse to identify the API
    # last = look for a location that matches the new URI
}

# Policy section
location /_warehouse {
    internal;
    set $api_name "Warehouse"; # Match the name of the API so it appears correctly in log files

    # Policy configuration:

    # Authentication - clients are expected to present their API key in the apikey HTTP header
    if ($http_apikey = "") {
        return 401; # Unauthorized (please authenticate)
    }
    if ($api_client_name = "") {
        return 403; # Forbidden (invalid API key)
    }

    # Rate limiting - define a rate limit of 10 requests per second for each client IP address 
    limit_req zone=client_ip_1rs;
    limit_req_status 429;

    rewrite ^/_warehouse/(.*)$ /$1 break; # Remove /_warehouse prefix
    proxy_pass http://$upstream;          # Proxy the rewritten URI
}

